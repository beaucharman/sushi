/**
 * Sushi - Tasty, bite sized, Sass grid system
 *
 * @version   1.0 | November 23rd 2013
 * @author    Beau Charman | @beaucharman | https://github.com/beaucharman
 * @link      https://github.com/beaucharman/sushi
 * @license   MIT license
 */



//
//
// Variables
//
//

// Smart breakpoint
$sushi__grid__float_breakpoint: 720px;

// Grid settings
$sushi__grid__column_padding:   0.75em;
$sushi__base__padding:          $sushi__grid__column_padding;
$sushi__grid__columns:          12;

// Max width of the gid
$sushi__base__max_width:        960px;



//
//
// Helpers
//
//

//
// Clearfix
//
// Thank you http://nicolasgallagher.com/micro-clearfix-hack/
//
%clearfix {
	*zoom: 1;

	&:before,
	&:after {
		content: " ";
		display: table;
	}

	&:after {
		clear: both;
	}
}



//
//
// Mixins
//
//

//
// Breakpoint
//
// @param {string} $point
// @param {string} $condition
//
@mixin sushi__breakpoint($point: $grid__float_breakpoint, $condition: min-width) {
	@media screen and ($condition: $point) { @content; }
}

//
// Box sizing
//
// @param {string} $box_model
//
@mixin sushi__box-sizing($box_model: border-box) {
	-webkit-box-sizing: $box_model; // Android < 2.3, iOS < 4
	   -moz-box-sizing: $box_model; // Firefox 1+
	        box-sizing: $box_model; // Chrome, IE 8+, Opera, Safari 5.1
}



//
//
// Grid system
//
//

//
// Make Row
//
// @param none
//
@mixin sushi__row {
	// Negative margin the row out to align the content of columns
	margin-left: -$sushi__grid__column_padding;
	margin-right: -$sushi__grid__column_padding;
	@extend %clearfix; // Then clear the floated columns
}

//
// Make Column
//
// @param none
//
@mixin sushi__column {
	float: left;
	width: 100%;
	min-height: 1px; // Prevent columns from collapsing when empty
	padding-left: $sushi__grid__column_padding; // Set inner padding as gutters instead of margin
	padding-right: $sushi__grid__column_padding;
	@include sushi__box-sizing(); // Proper box-model (padding doesn't add to width)
}

//
// Make Grid Pattern
//
// @param {integer} $grid-pattern
// @param {boolean} $collapse
// @param {string}  $breakpoint
//
@mixin sushi__grid-pattern($grid-pattern, $collapse: true, $breakpoint: $sushi__grid__float_breakpoint) {

	// Calculate width based on number of columns available
	@if ($collapse == true) {
		@include sushi__breakpoint($breakpoint) {
			width: percentage($grid-pattern / $sushi__grid__columns);
		}
	} @else {
		width: percentage($grid-pattern / $sushi__grid__columns);
	}
}

//
// Define Grid Offset
//
// @param  {integer} $grid-pattern
//
@mixin sushi__grid-offset($grid-pattern) {
	@media (min-width: $sushi__grid__float_breakpoint) {
		margin-left: percentage($grid-pattern / $sushi__grid__columns);
	}
}

/**
 * Proper box sizing
 */
* {
	@include sushi__box-sizing();
}

/**
 * Container - center aligned
 */
.sushi__container,
.container {
	margin: 0 auto;
	padding: $sushi__base__padding;
	max-width: $sushi__base__max_width;
}

/**
 * Rows
 */
.sushi__row,
.row {
	@include sushi__row;
}

/**
 * Column
 */
.sushi__column,
.column {
	@include sushi__column;
}



/**
 * Examples
 */
.grid--1 {
	@include sushi__grid-pattern(1);
}
.grid--2 {
	@include sushi__grid-pattern(2);
}
.grid--3 {
	@include sushi__grid-pattern(3);
}
.grid--4 {
	@include sushi__grid-pattern(4);
}
.grid--5 {
	@include sushi__grid-pattern(5);
}
.grid--6 {
	@include sushi__grid-pattern(6);
}
.grid--7 {
	@include sushi__grid-pattern(7);
}
.grid--8 {
	@include sushi__grid-pattern(8);
}
.grid--9 {
	@include sushi__grid-pattern(9);
}
.grid--10 {
	@include sushi__grid-pattern(10);
}
.grid--11 {
	@include sushi__grid-pattern(11);
}
.grid--12 {
	@include sushi__grid-pattern(12);
}


.grid-content {
	background-color: #ddd;
	margin-bottom: 0.25em;
	padding: 0.25em;
	text-align: center;
	box-shadow: inset 0 4px 4px -6px #222;
}